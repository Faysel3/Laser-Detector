unsigned long time;
//unsigned long timesec;


int pin_Out_S0_MUX1 = 2;
int pin_Out_S1_MUX1 = 3;
int pin_Out_S2_MUX1 = 4;
int pin_Out_S3_MUX1 = 5;

int pin_Out_S0_MUX2 = 8;
int pin_Out_S1_MUX2 = 9;
int pin_Out_S2_MUX2 = 10;
int pin_Out_S3_MUX2 = 11;  //showing which digital output channels on the Arduino connect to which which multiplexer channel selector connectors on the multiplexer

int pin_In_MUX1 = A0; 
int pin_In_MUX2 = A1; //showing which analogue output signals from which MUX are connected to which Analogue input pins on the Arduino

int MUX1_State[16] = {0};
int MUX2_State[16] = {0}; //initialising the default value for every sensor in my arrays for both multiplexers

int Enable1 = 6;
int Enable2 = 12; //Pin to connect to enable

int DelayTime = 0;

void setup() {
  
  pinMode(pin_Out_S0_MUX1, OUTPUT);
  pinMode(pin_Out_S1_MUX1, OUTPUT);
  pinMode(pin_Out_S2_MUX1, OUTPUT);
  pinMode(pin_Out_S3_MUX1, OUTPUT);
  pinMode(pin_In_MUX1, INPUT);       //setting which pins are inputs and which are outputs on the arduino for MUX1
  digitalWrite(pin_Out_S0_MUX1,LOW);
  digitalWrite(pin_Out_S1_MUX1,LOW);
  digitalWrite(pin_Out_S2_MUX1,LOW);
  digitalWrite(pin_Out_S3_MUX1,LOW);//setting all the selector pins as off to start with for MUX1
  
  pinMode(pin_Out_S0_MUX2, OUTPUT);
  pinMode(pin_Out_S1_MUX2, OUTPUT);
  pinMode(pin_Out_S2_MUX2, OUTPUT);
  pinMode(pin_Out_S3_MUX2, OUTPUT);
  pinMode(pin_In_MUX2, INPUT);       //setting which pins are inputs and which are outputs on the arduino for MUX2
  digitalWrite(pin_Out_S0_MUX2,LOW);
  digitalWrite(pin_Out_S1_MUX2,LOW);
  digitalWrite(pin_Out_S2_MUX2,LOW);
  digitalWrite(pin_Out_S3_MUX2,LOW);//setting all the selector pins as off to start with for MUX1
  
  pinMode(Enable1, OUTPUT); //setting enable 1 pin as output
  digitalWrite(Enable1, LOW); //setting enable 1 to 0 (LOW)
  
  pinMode(Enable2, OUTPUT); //setting enable 2 pin as output
  digitalWrite(Enable2, LOW); //setting enable 2 to 0 (LOW)
  
  Serial.begin(9600);
}


void loop() //loop to display current voltages for in an array of 16 values for MUX1
{
  MUX1Loop(); //function which runs through MUX1
  Serial.print(", Time (ms): ");
  time = millis(); 
  //timesec = time/1000;
  Serial.print(time);
  MUX2Loop(); //function which runs through MUX2
  Serial.print(", Time (ms): ");
  time = millis();
  //timesec = time/1000;
  Serial.print(time);
}

void MUX1Loop() { //function which loops through I0-I15 MUX1
  updateMUX1();
  for(int i = 0; i < 16; i ++) {
   if (i==15) {
    Serial.print(", MUX1 ");
    Serial.print (MUX1_State[i]);
   } else {
     Serial.print(", MUX1 ");
     Serial.print(MUX1_State[i]);
     
   }
  }
}

void MUX2Loop() { //function which loops though I0-I15 MUX2
  updateMUX2();
  for(int i = 0; i < 16; i ++) {
   if (i==15) {
    Serial.print(", MUX2 ");
    Serial.println (MUX2_State[i]);
   } else {
     Serial.print(", MUX2 ");
     Serial.print(MUX2_State[i]);
     
   }
  }
}

void updateMUX1()
{ 
  for(int i = 0; i < 16; i++ ){
    if (i==0){
    digitalWrite(pin_Out_S0_MUX1, LOW ); //pins s0,s1,s2,s3 have been configured as OUTPUT with pinMode(), hence s0,s1,s2,s3 when set to combination of HIGH and LOW will select lines from 0-15
    digitalWrite(pin_Out_S1_MUX1, LOW );
    digitalWrite(pin_Out_S2_MUX1, LOW );
    digitalWrite(pin_Out_S3_MUX1, LOW );
    delay(DelayTime);
  } else if (i==1){
    digitalWrite(pin_Out_S0_MUX1, HIGH ); 
    digitalWrite(pin_Out_S1_MUX1, LOW );
    digitalWrite(pin_Out_S2_MUX1, LOW );
    digitalWrite(pin_Out_S3_MUX1, LOW );
    delay(DelayTime);
  } else if (i==2){
    digitalWrite(pin_Out_S0_MUX1, LOW ); 
    digitalWrite(pin_Out_S1_MUX1, HIGH );
    digitalWrite(pin_Out_S2_MUX1, LOW );
    digitalWrite(pin_Out_S3_MUX1, LOW );
    delay(DelayTime);
  } else if (i==3){
    digitalWrite(pin_Out_S0_MUX1, HIGH ); 
    digitalWrite(pin_Out_S1_MUX1, HIGH );
    digitalWrite(pin_Out_S2_MUX1, LOW );
    digitalWrite(pin_Out_S3_MUX1, LOW );
    delay(DelayTime);
  } else if (i==4){
    digitalWrite(pin_Out_S0_MUX1, LOW ); 
    digitalWrite(pin_Out_S1_MUX1, LOW );
    digitalWrite(pin_Out_S2_MUX1, HIGH );
    digitalWrite(pin_Out_S3_MUX1, LOW );
    delay(DelayTime);
  } else if (i==5){
    digitalWrite(pin_Out_S0_MUX1, HIGH ); 
    digitalWrite(pin_Out_S1_MUX1, LOW );
    digitalWrite(pin_Out_S2_MUX1, HIGH );
    digitalWrite(pin_Out_S3_MUX1, LOW );
    delay(DelayTime);
  } else if (i==6){
    digitalWrite(pin_Out_S0_MUX1, LOW ); 
    digitalWrite(pin_Out_S1_MUX1, HIGH );
    digitalWrite(pin_Out_S2_MUX1, HIGH );
    digitalWrite(pin_Out_S3_MUX1, LOW );
    delay(DelayTime);
  } else if (i==7){
    digitalWrite(pin_Out_S0_MUX1, HIGH ); 
    digitalWrite(pin_Out_S1_MUX1, HIGH );
    digitalWrite(pin_Out_S2_MUX1, HIGH );
    digitalWrite(pin_Out_S3_MUX1, LOW );
    delay(DelayTime);
  } else if (i==8){
    digitalWrite(pin_Out_S0_MUX1, LOW ); 
    digitalWrite(pin_Out_S1_MUX1, LOW );
    digitalWrite(pin_Out_S2_MUX1, LOW );
    digitalWrite(pin_Out_S3_MUX1, HIGH );
    delay(DelayTime);
  } else if (i==9){
    digitalWrite(pin_Out_S0_MUX1, HIGH ); 
    digitalWrite(pin_Out_S1_MUX1, LOW );
    digitalWrite(pin_Out_S2_MUX1, LOW );
    digitalWrite(pin_Out_S3_MUX1, HIGH );
    delay(DelayTime);
  } else  if (i==10){
    digitalWrite(pin_Out_S0_MUX1, LOW ); 
    digitalWrite(pin_Out_S1_MUX1, HIGH );
    digitalWrite(pin_Out_S2_MUX1, LOW );
    digitalWrite(pin_Out_S3_MUX1, HIGH );
    delay(DelayTime);
  } else if (i==11){
    digitalWrite(pin_Out_S0_MUX1, HIGH ); 
    digitalWrite(pin_Out_S1_MUX1, HIGH );
    digitalWrite(pin_Out_S2_MUX1, LOW );
    digitalWrite(pin_Out_S3_MUX1, HIGH );
    delay(DelayTime);
  } else if (i==12){
    digitalWrite(pin_Out_S0_MUX1, LOW ); 
    digitalWrite(pin_Out_S1_MUX1, LOW );
    digitalWrite(pin_Out_S2_MUX1, HIGH );
    digitalWrite(pin_Out_S3_MUX1, HIGH );
    delay(DelayTime);
  } else if (i==13){
    digitalWrite(pin_Out_S0_MUX1, HIGH ); 
    digitalWrite(pin_Out_S1_MUX1, LOW );
    digitalWrite(pin_Out_S2_MUX1, HIGH );
    digitalWrite(pin_Out_S3_MUX1, HIGH );
    delay(DelayTime);
  } else if (i==14){
    digitalWrite(pin_Out_S0_MUX1, LOW ); 
    digitalWrite(pin_Out_S1_MUX1, HIGH );
    digitalWrite(pin_Out_S2_MUX1, HIGH );
    digitalWrite(pin_Out_S3_MUX1, HIGH );
    delay(DelayTime);
  } else if (i==15){
    digitalWrite(pin_Out_S0_MUX1, HIGH ); 
    digitalWrite(pin_Out_S1_MUX1, HIGH );
    digitalWrite(pin_Out_S2_MUX1, HIGH );
    digitalWrite(pin_Out_S3_MUX1, HIGH );
    delay(DelayTime);
  } else {
    digitalWrite(pin_Out_S0_MUX1, LOW);
    digitalWrite(pin_Out_S1_MUX1, LOW );
    digitalWrite(pin_Out_S2_MUX1, LOW );
    digitalWrite(pin_Out_S3_MUX1, LOW );
  }
   
   MUX1_State[i] = analogRead(pin_In_MUX1);
   
  }
}

void updateMUX2()
{
  for(int i=0; i < 16; i++ ){
    if (i==0){
    digitalWrite(pin_Out_S0_MUX2, LOW ); //pins s0,s1,s2,s3 have been configured as OUTPUT with pinMode(), hence s0,s1,s2,s3 when set to combination of HIGH and LOW will select lines from 0-15
    digitalWrite(pin_Out_S1_MUX2, LOW );
    digitalWrite(pin_Out_S2_MUX2, LOW );
    digitalWrite(pin_Out_S3_MUX2, LOW );
    delay(DelayTime);
  } else if (i==1){
    digitalWrite(pin_Out_S0_MUX2, HIGH ); 
    digitalWrite(pin_Out_S1_MUX2, LOW );
    digitalWrite(pin_Out_S2_MUX2, LOW );
    digitalWrite(pin_Out_S3_MUX2, LOW );
    delay(DelayTime);
  } else if (i==2){
    digitalWrite(pin_Out_S0_MUX2, LOW ); 
    digitalWrite(pin_Out_S1_MUX2, HIGH );
    digitalWrite(pin_Out_S2_MUX2, LOW );
    digitalWrite(pin_Out_S3_MUX2, LOW );
    delay(DelayTime);
  } else if (i==3){
    digitalWrite(pin_Out_S0_MUX2, HIGH ); 
    digitalWrite(pin_Out_S1_MUX2, HIGH );
    digitalWrite(pin_Out_S2_MUX2, LOW );
    digitalWrite(pin_Out_S3_MUX2, LOW );
    delay(DelayTime);
  } else if (i==4){
    digitalWrite(pin_Out_S0_MUX2, LOW ); 
    digitalWrite(pin_Out_S1_MUX2, LOW );
    digitalWrite(pin_Out_S2_MUX2, HIGH );
    digitalWrite(pin_Out_S3_MUX2, LOW );
    delay(DelayTime);
  } else if (i==5){
    digitalWrite(pin_Out_S0_MUX2, HIGH ); 
    digitalWrite(pin_Out_S1_MUX2, LOW );
    digitalWrite(pin_Out_S2_MUX2, HIGH );
    digitalWrite(pin_Out_S3_MUX2, LOW );
    delay(DelayTime);
  } else if (i==6){
    digitalWrite(pin_Out_S0_MUX2, LOW ); 
    digitalWrite(pin_Out_S1_MUX2, HIGH );
    digitalWrite(pin_Out_S2_MUX2, HIGH );
    digitalWrite(pin_Out_S3_MUX2, LOW );
    delay(DelayTime);
  } else if (i==7){
    digitalWrite(pin_Out_S0_MUX2, HIGH ); 
    digitalWrite(pin_Out_S1_MUX2, HIGH );
    digitalWrite(pin_Out_S2_MUX2, HIGH );
    digitalWrite(pin_Out_S3_MUX2, LOW );
    delay(DelayTime);
  } else if (i==8){
    digitalWrite(pin_Out_S0_MUX2, LOW ); 
    digitalWrite(pin_Out_S1_MUX2, LOW );
    digitalWrite(pin_Out_S2_MUX2, LOW );
    digitalWrite(pin_Out_S3_MUX2, HIGH );
    delay(DelayTime);
  } else if (i==9){
    digitalWrite(pin_Out_S0_MUX2, HIGH ); 
    digitalWrite(pin_Out_S1_MUX2, LOW );
    digitalWrite(pin_Out_S2_MUX2, LOW );
    digitalWrite(pin_Out_S3_MUX2, HIGH );
    delay(DelayTime);
  } else if (i==10){
    digitalWrite(pin_Out_S0_MUX2, LOW ); 
    digitalWrite(pin_Out_S1_MUX2, HIGH );
    digitalWrite(pin_Out_S2_MUX2, LOW );
    digitalWrite(pin_Out_S3_MUX2, HIGH );
    delay(DelayTime);
  } else if (i==11){
    digitalWrite(pin_Out_S0_MUX2, HIGH ); 
    digitalWrite(pin_Out_S1_MUX2, HIGH );
    digitalWrite(pin_Out_S2_MUX2, LOW );
    digitalWrite(pin_Out_S3_MUX2, HIGH );
    delay(DelayTime);
  } else if (i==12){
    digitalWrite(pin_Out_S0_MUX2, LOW ); 
    digitalWrite(pin_Out_S1_MUX2, LOW );
    digitalWrite(pin_Out_S2_MUX2, HIGH );
    digitalWrite(pin_Out_S3_MUX2, HIGH );
    delay(DelayTime);
  } else if (i==13){
    digitalWrite(pin_Out_S0_MUX2, HIGH ); 
    digitalWrite(pin_Out_S1_MUX2, LOW );
    digitalWrite(pin_Out_S2_MUX2, HIGH );
    digitalWrite(pin_Out_S3_MUX2, HIGH );
    delay(DelayTime);
  } else if (i==14){
    digitalWrite(pin_Out_S0_MUX2, LOW ); 
    digitalWrite(pin_Out_S1_MUX2, HIGH );
    digitalWrite(pin_Out_S2_MUX2, HIGH );
    digitalWrite(pin_Out_S3_MUX2, HIGH );
    delay(DelayTime);
  } else if (i==15){
    digitalWrite(pin_Out_S0_MUX2, HIGH ); 
    digitalWrite(pin_Out_S1_MUX2, HIGH );
    digitalWrite(pin_Out_S2_MUX2, HIGH );
    digitalWrite(pin_Out_S3_MUX2, HIGH );
    delay(DelayTime);
  } else {
    digitalWrite(pin_Out_S0_MUX2, LOW);
    digitalWrite(pin_Out_S1_MUX2, LOW );
    digitalWrite(pin_Out_S2_MUX2, LOW );
    digitalWrite(pin_Out_S3_MUX2, LOW );
  }
    
    MUX2_State[i] = analogRead(pin_In_MUX2);
    
    
    
  }
}
